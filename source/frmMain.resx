<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>